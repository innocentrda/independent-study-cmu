
---

# karmada-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: karmada-access
  namespace: karmada-system


kubectl create clusterrolebinding karmada-access-binding --clusterrole=cluster-admin --serviceaccount=karmada-system:karmada-access


---

# karmada-access-token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: karmada-access-token
  namespace: karmada-system
  annotations:
    kubernetes.io/service-account.name: karmada-access
type: kubernetes.io/service-account-token





SECRET_NAME=karmada-access-token

# Get the token
TOKEN=$(kubectl -n karmada-system get secret $SECRET_NAME -o jsonpath='{.data.token}' | base64 -d)

# Show the token
echo $TOKEN



# openstack@network-deploy:~$ cat karmada-config1 
# apiVersion: v1
# kind: Config
# clusters:
#   - cluster:
#       server: https://10.10.10.30:5443
#       insecure-skip-tls-verify: true
#     name: karmada-apiserver
# users:
#   - user:
#       client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZOekNDQTUrZ0F3SUJBZ0lVY0Z0MVkxNk41SUdJY1JLTUZzM0djcFpEckgwd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1hERUxNQWtHQTFVRUJoTUNlSGd4Q2pBSUJnTlZCQWdNQVhneENqQUlCZ05WQkFjTUFYZ3hDakFJQmdOVgpCQW9NQVhneENqQUlCZ05WQkFzTUFYZ3hDekFKQmdOVkJBTU1BbU5oTVJBd0RnWUpLb1pJaHZjTkFRa0JGZ0Y0Ck1CNFhEVEkxTURNeU1EQTBOVEV3TUZvWERUTXdNRE14T1RBME5URXdNRm93TURFWE1CVUdBMVVFQ2hNT2MzbHoKZEdWdE9tMWhjM1JsY25NeEZUQVRCZ05WQkFNVERITjVjM1JsYlRwaFpHMXBiakNDQWFJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTHV6eFhGdE1IYzdzZ2pLVDU2UEZhLzlqeTlWb3NpMHJha2N4c3FBClJBT3A3S3Y0RnE5RFRvS3BSQThDSnBmSmE1Nk51T2VYTm5xVWJzbld2MDQrQnlMaHRwY3liZDRidDR6VSthZW8KbktJKzFRNU90NDdydGhqMHYvTWtsZWNGZ3VRb0FCWXRlb3RsM1p1UUtSYzllazNVSHNmUld6emNHYkFicFBkbgpiTnNUT1M3R1plVWtJQ1Y5MUFvUG5PNURiaWtTejloMExaY0Q0disyVGVRUGZ4NlBjTUlBWjk2VHVwYUxHUTl1ClhCeFBzamxDT0tWYjBMN0dtNWNpaXlLRWdyZ0I2M05hdGsyVG5rcWZJK3NMbUNLcHJuVVFDOGkvZGsvU2VaMU8KZkpaUVlvUmtEVENmT0ZseHc0bWlnMDAxYldnRS9jU2JWdlpqQTFEajVOK2lxaVN6M3dQOXdHb05tOUkzYk9aZgpOK2V6QW5IYmJ2V292NGVRb0RpS2F5YWh3TVhWUG8rNko5V1QzTVo2VFl2Z1RMczFhU296VmZaMi9aaEFNc2pZCkN0WWtsd1lBcnZielBZWkN1V2ZUWEtXZ3o5TXZRVi9LWUJhMmhVQngzTkhWN0VSNVVkcnFucUkvOXBXRHJOeXYKUTA1eHh2cHZnK0tZR0NWWlZXRWJDemRlWHdJREFRQUJvNElCR3pDQ0FSY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZwpNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHCkExVWREZ1FXQkJSSksvMXNSdEdHUzhoNjdIQ3hPSjJUZEZvbkp6QWZCZ05WSFNNRUdEQVdnQlNJQnAwUmhMdjMKcU9WT0RiTFE4ZTVqL296SDBUQ0Jsd1lEVlIwUkJJR1BNSUdNZ2hacmRXSmxjbTVsZEdWekxtUmxabUYxYkhRdQpjM1pqZ2ljcUxtVjBZMlF1YTJGeWJXRmtZUzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNJaW91CmEyRnliV0ZrWVMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDRkNvdWEyRnliV0ZrWVMxemVYTjAKWlcwdWMzWmpnZ2xzYjJOaGJHaHZjM1NIQkg4QUFBRXdEUVlKS29aSWh2Y05BUUVNQlFBRGdnR0JBRnlobG9yTQpBMGREdTd6N1lQYzhoVWNuc0trR2MzY0FPR2FwbVYvZWpkN2pXdTBJbVllVlg3Ni9hUXdHa1U5UGlxcksxOHRCCk1qeUlLMjNYbXN0bVN1Mi9lTkVzWXVoZmxQWndwSWZMblNnOXN2ZCtnYnFRZm5aK3JFSEZTcVR2N3NBSVlBM1QKQUxsZ0tJanQwTmJxaktoY0xCYWIyTUZHQ1U3ZGVQblF6UVk4S2NVc1ZacXZhMWlWcHNlOU9SanQzckoxK1h5ZApvNUlPYzdwcTVBVGFDekRWcEp5aFE3aGprWk9NK1o2Rlp0ZU9IUlErTDVjS2FQYnhXNTJWUmJWczlMeVJQRGxwCnJaOXpCbnljSVNMV2FYMk1MU2xvcDF0OURpZHZHOEVYVjRZNHlucnNwa3hqeGM4VkMyZ3JvVnc2ekUrZis3OTcKK1FnL20yQ1FDSHV1NXE1MEkyMkd3dXM3SGthLzNjdnk2c3VUcThCSGZ4aDNaUjQ2RXNmTzBtL1MvWjQ1OWY5awpka1VEb0hia093aWxEWHQyb3VheXFVeFFuakZ1NGRSVnJCM3hzNlBEbGRWbGpZamtsTW9Pa2p1K2x4WGswdHZJCkpZWWFYUWRoVHNUVkhCVklQbVA1NjFlQTVQM2FUTm1iV3hFQjJFZEEwUWk5MXllOWRiVDFYZTAyeGc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
#       client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlHNUFJQkFBS0NBWUVBdTdQRmNXMHdkenV5Q01wUG5vOFZyLzJQTDFXaXlMU3RxUnpHeW9CRUE2bnNxL2dXCnIwTk9ncWxFRHdJbWw4bHJubzI0NTVjMmVwUnV5ZGEvVGo0SEl1RzJsekp0M2h1M2pOVDVwNmljb2o3VkRrNjMKanV1MkdQUy84eVNWNXdXQzVDZ0FGaTE2aTJYZG01QXBGejE2VGRRZXg5RmJQTndac0J1azkyZHMyeE01THNabAo1U1FnSlgzVUNnK2M3a051S1JMUDJIUXRsd1BpLzdaTjVBOS9Ibzl3d2dCbjNwTzZsb3NaRDI1Y0hFK3lPVUk0CnBWdlF2c2FibHlLTElvU0N1QUhyYzFxMlRaT2VTcDhqNnd1WUlxbXVkUkFMeUw5MlQ5SjVuVTU4bGxCaWhHUU4KTUo4NFdYSERpYUtEVFRWdGFBVDl4SnRXOW1NRFVPUGszNktxSkxQZkEvM0FhZzJiMGpkczVsODM1N01DY2R0dQo5YWkvaDVDZ09JcHJKcUhBeGRVK2o3b24xWlBjeG5wTmkrQk11elZwS2pOVjluYjltRUF5eU5nSzFpU1hCZ0N1Cjl2TTloa0s1WjlOY3BhRFAweTlCWDhwZ0ZyYUZRSEhjMGRYc1JIbFIydXFlb2ovMmxZT3MzSzlEVG5IRyttK0QKNHBnWUpWbFZZUnNMTjE1ZkFnTUJBQUVDZ2dHQUpTVGhHSjRiN2l4eEFjNVBUVGhSZVY4Nis0bjl5YXYvaGF5OQpKZ3VWNmdleFh5S2NFcGpHSzVNbGRiYmVQa0ZNdTdhZDlhNTF5SEloTG00QnM1RVF4blZXTmJ0MEJIVUZzS2ZnCnM2M3BPUzRuNlVub2h5N2IvVHBKMWVyU2cwSVM4ZVY4aHViL0RpRGRadEJ6WVRiNFFmaU5Fc3U2TzJQdTdXdTcKREg1NkN5eFZyNHp4VXhRQURJdEc3NnJCU21FcnBwTWpjRmtsUUhJemRKajE5d0NlRGtVaWNqRzBYRlp0b1NicgprYU1zTlNvTVFjcDUvVGNiS3ZXUWlxcjZUNTFiRGdIWHhqNGM1YmM4aVhCbjQ3Z1hnN280TnpiOEx1WmNqT3ZoCjRJWm45WUNrWnphN3d2RnA5TUhlYmVVUEZYZUhZNHNib2JBclJ3eTN2eFlGOWd4YlpKaUE3Y0VuVzR2OUdNcEQKdHlUUXBYZHgyVThHVmpuN2diTlM3eHFQSjZtQ3VuUm5RMnhVeFl6S1ViVGFpcVFsQWdWTUJmdVp5VmJZNzNHVgpOc04yYTJ2Ri84alJRK2JvbDU4cjhuNklKTWVSQm5SNWt3Mi9uL08va2cyamh0ck55SGZVVjBJYUhmSGVVTmNoCnQ4b3dxTXExWjJOTjlHTkpYMFk0V3VMQ1o0blJBb0hCQU9hcFNndENXU0RGa0hkdWJhK2tCR00vY0VZQlNIeDQKTkhUVjVuTWJ2MGZNdEpheVErbWVOVWlvT2hLdUhOSDVyQlE5dUE4K2d1WCszSXQ3bWNyOGJaaUFBLzEyWjl2SgpTRnNBaTYvc283VUR3ZS9ZZ2tDSWpseXF5bCtQMXVaSm1iYzVZQjFEMEttT2djY2VEZGxuOVRDbFNFZEhncFNGClB6QVUyS1dnTW5YU0xyWGJuU0p6bXA0Mll2aXJnWVR1Q2pKUVNqU2xVV2txaWdpRW5iQWNzNzByOUR5emc4eVUKN2VHWnM2MlZ0dHVEbGROeHBYaUhXVTZEYTBEbUhJNDhGd0tCd1FEUVVtQ2V5NU0wZ0NoTlI0czNySm5qNWd5bQpMa3h1QUkvSDZPc2RqelY3V2JJVG5ITE9OeG1RcVpOQ2s1US9JbmpOcU1XQlZXTW1oT2N4eC9nWVMzeGl3SDBBCmNvVEhJUlFiVFBwVk5mYWgrVENCQy9QWkpORDczTGtVTCszMll6THJ6a1RsM2Q2bFNkK1l5b2NmeXY5bTFDWkYKRFpXb28yU01LZXI2Y1diUllwLzhvWkNmSTcxaTN3dFZIQ2hjblBHdnIzUEYxZnpiOGx2eUFYZlFRS2pyVHo2bApMS3pPY1p0a1VPSXJYdkdEMGZEcklMM1VwejVEKzVDYkN1dlA5UGtDZ2NFQTVnY2JwV0RVVzU5S3RDQTNXTHJiCitWSVJtRzY5S0F3RVhDUFl2eUNEd0ltLzZxejZseWRFZ2lIcVVDaTg2eFh2YXZ3bDYyWHV5b2xBemdWRVdTOGwKNkxoNXdqSnIzcjY3M3EwTG9UVUFDWXdtd3hjS3htcW9kbmVJZklhSXpIM0h3dmFBQ0k5UnIxWkR6QndIdWJFMwp6dngxdVVmeVRFVVp2OHg2UmFvZHlHd0VVeTRoWlhNZVZmdHM5Z3FyanJLSkRxWU5hclVYSENibEl4dUYybFMxClZzbFh0NVZhc2hJdnJSVklINnMzZ1hDWFlSZHI2bWdvUXVsQ2M2VklBdnlmQW9IQVNTUkRMRDNKcDJzL3V6SmQKWE9USyswc3dNY0Nic1J1ZFg5RVZpOEZXUThMUVZUWmUwS3hqMjNqT2JWZW5leXM5UXVmNHdGb2NmOCsxNUxLVApGdVNaL1lvYjJXWmIzQlp2R3M3Q0xkek9oVHdhblpSMnYweS8yMDQ1NVM2VzNDVWtJY3JBUWZ6T1NUWlF2VEtPCmtza1JOeWRSY0hrK2pJRWhzbHlkVmVVdTltRXNUdVRqQkJ6bVI2cU1MZ3UrMkJWNmZmYWFMV0hlYjlMK0dWQU8Kb3gyd3NUMlhmeUxhWVhsZDE3RFdWK2Z6NEJaOEFmSHk5SkRydWE2L3JNLyt6M3J4QW9IQkFNMXZ1L1FyKzdrMAp2bWgzK0FvM01qQmtyWGlLSmlVcGNkUnVzY3NXenNHRHd2UEpraEVEVXdkTnFjaUdQVHp4ZlB5NzZNWjZwL1BVClZ5OWtMN2taZXNTTzhlSGpzTWNBd0dIb04yRzE5WU4wQzh0UmZYQy9PTElCbUpZNzFzOFA5VmJtdDBLU2tTcXkKNVlhOTl0T1E5YTE4djQyZ0tJQjgxa1N5S1pvWnREdHFGWGxkZ0dzaEIyaEdhOXNIZElMS2dEalFaUGY1NUtDVApNUTRQV1djRHhhd3A3NGdJcnI3eTdNNEV2Q25UMXc1dEc5R2grZnRDYStMd2RuU3ZJdzlKOWc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
#     name: karmada-apiserver
# contexts:
#   - context:
#       cluster: karmada-apiserver
#       user: karmada-apiserver
#     name: karmada-apiserver
# current-context: karmada-apiserver


#########################################

# nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
spec:
  replicas: 1  # This will be overridden per cluster
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

---
apiVersion: policy.karmada.io/v1alpha1
kind: PropagationPolicy
metadata:
  name: nginx-propagation
  namespace: default
spec:
  resourceSelectors:
    - apiVersion: apps/v1
      kind: Deployment
      name: nginx
  placement:
    clusterAffinity:
      clusterNames:
        - compute-cluster
        - storage-cluster
    replicaScheduling:
      replicaSchedulingType: Divided
      replicaDivisionPreference: Weighted
      weightPreference:
        staticWeightList:
          - targetCluster:
              clusterNames:
                - compute-cluster
            weight: 3
          - targetCluster:
              clusterNames:
                - storage-cluster
            weight: 4




- sh
- -c
- xtables-set-mode.sh --mode legacy && kube-proxy --cluster-cidr=10.42.0.0/16 --conntrack-max-per-core=0 --conntrack-tcp-timeout-close-wait=0s --conntrack-tcp-timeout-established=0s --healthz-bind-address=127.0.0.1 --hostname-override=compute-ceph3 --kubeconfig=/var/lib/rancher/rke2/agent/kubeproxy.kubeconfig --proxy-mode=iptables

# sudo nano /var/lib/rancher/rke2/agent/pod-manifests/kube-proxy.yaml
# sudo systemctl restart rke2-agent


# https://github.com/amirianfar/kubeflow-tutorial/blob/main/access_kfp_from_jupyter_notebook.yaml


apiVersion: kubeflow.org/v1alpha1
kind: PodDefault
metadata:
  name: access-ml-pipeline
  namespace: kubeflow-user-example-com
spec:
  desc: Allow access to Kubeflow Pipelines
  selector:
    matchLabels:
      access-ml-pipeline: "true"
  volumes:
    - name: volume-kf-pipeline-token
      projected:
        sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: 7200
              audience: pipelines.kubeflow.org      
  volumeMounts:
    - mountPath: /var/run/secrets/kubeflow/pipelines
      name: volume-kf-pipeline-token
      readOnly: true
  env:
    - name: KF_PIPELINES_SA_TOKEN_PATH
      value: /var/run/secrets/kubeflow/pipelines/token




https://docs.vultr.com/use-karmada-to-orchestrate-vultr-kubernetes-engine-in-multiple-locations
https://github.com/karmada-io/karmada/tree/master/charts/karmada


helm repo add karmada-charts https://raw.githubusercontent.com/karmada-io/karmada/master/charts
helm --namespace karmada-system upgrade -i karmada karmada-charts/karmada --create-namespace
kubectl get secret karmada-kubeconfig -n karmada-system -o jsonpath={.data.kubeconfig} | base64 -d > .kube/karmada-config
 # ==> Update the server in the file with the cluster manager node's IP address


# karmada-config.yaml
apiVersion: v1
kind: Config
clusters:
  - cluster:
      server: https://10.10.10.30:5443
      insecure-skip-tls-verify: true
    name: karmada-apiserver
users:
  - user:
      client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZOekNDQTUrZ0F3SUJBZ0lVTVlZaXZCME9WYUhTcnBmeFZldTQrZXFacXZFd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1hERUxNQWtHQTFVRUJoTUNlSGd4Q2pBSUJnTlZCQWdNQVhneENqQUlCZ05WQkFjTUFYZ3hDakFJQmdOVgpCQW9NQVhneENqQUlCZ05WQkFzTUFYZ3hDekFKQmdOVkJBTU1BbU5oTVJBd0RnWUpLb1pJaHZjTkFRa0JGZ0Y0Ck1CNFhEVEkxTURReE9URTNNelF3TUZvWERUTXdNRFF4T0RFM016UXdNRm93TURFWE1CVUdBMVVFQ2hNT2MzbHoKZEdWdE9tMWhjM1JsY25NeEZUQVRCZ05WQkFNVERITjVjM1JsYlRwaFpHMXBiakNDQWFJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTVBvN3VyZWhqeDFGRkdJR1hqZkc2a3Y0TUgybVdkcUZVNVYrZHpQCkZMdURjWnRpVzdyRzhPcGdRWEE4Q1RSaTQ4aEpyT0tJV0tWY01oTHJPWllYampLdVVxTkRGeWdUbEtheG1mYXAKQnN2VHhsU2piYjRoUXgvbkl4OWU5WkxHaGZMbW5lN2I4eXpTSnk3cThKMzE4OWIvMU1jS3VQRnlWTUV6d09vRwpHVjBFV2FZOU9BU1pxYzJWOGwrdlZ1b2hOOGs1ejBUZTRia2ZscWtFSFZBZjZWdzREUkROVW4zYVdpekRvbkhrCmdrb016NVZVb0V0WTlNb1pib2dlVEpRZVpiQXdCaEtoZzJ1U1ZMV3dFMkNKVHV6OVVnbU9QMEpTN2J5dmZHa1MKUExWR241MWd1Z0tEQWxiU285Ync3enVocHFzNnRhR296NXBQdlFSQWkyS1Jta29rSlBDT0N4Nm5td1ZmWEV0UApzYk1hWXpJMnF1Rkk0WXdkKzZWUXZ1bnZMOTNqVCtaRmV1b3A5QVlzUy9xTXVnMzZEZ3RhVldyS1g4TjJ0b05ECndsbjd2VXFOVXhVU1ZmNkZUdWdzbDFMdmY1R0kzcHdtaFVlYlpEUFJURXJCajBDMGNyMGovZXdyMDk5Ni9vVTkKODFCVnRZQ0taVGg3QzUyMGQ0Ymh2N0gvZ1FJREFRQUJvNElCR3pDQ0FSY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZwpNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHCkExVWREZ1FXQkJRVXJnS1VDemgvbmx1ZzVJVWcvTDlLWW0vQlJ6QWZCZ05WSFNNRUdEQVdnQlJwMHh5WWZKTi8KQmdydDhJcjZYZnlmaXF6N0hqQ0Jsd1lEVlIwUkJJR1BNSUdNZ2hacmRXSmxjbTVsZEdWekxtUmxabUYxYkhRdQpjM1pqZ2ljcUxtVjBZMlF1YTJGeWJXRmtZUzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNJaW91CmEyRnliV0ZrWVMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDRkNvdWEyRnliV0ZrWVMxemVYTjAKWlcwdWMzWmpnZ2xzYjJOaGJHaHZjM1NIQkg4QUFBRXdEUVlKS29aSWh2Y05BUUVNQlFBRGdnR0JBSjFnQVR5eQppOFcwYkxjWlhsRTRmTTFacFVnUTFUeDdIRndZY2V3SW1mRlJoNjBvOEtxQWVtekNWU0NodVRqNmdING9NajVlCnI1Um1nWXJyY3dDQTJQQitLU0pYVkQ2U1ZVOXNLR3BwdHNsWDZybXZMdlpBenlaRWYyaUhTRVNucFd0Sm01WFcKMm1mQVNIMFRvOEYzditMSkVzT0Q5enlObVU1MnkwbVFyZE1CN0lkcGl2anBvbndML3h5cVlyN2U3YVpVM0tWNgpWR2lsbTkxTHVIVndoK3FWanQwZTVZRkJMaEpvN1hqTEx4T3YzV1RlN3VzTlhVNldFU05HbXBUMlI5bmZ4MC9yCkhCVjdYdVpQakVvRHpCRXF2djhpWWNSaFVjTTgwWUR1VFhobFJxWkFrTjkydHl0YWd3SmpLUUxsN0lVenpsVEMKZVR3dmxJSHVOYmpNRXFmY2kwVmxHSjc5K3JadTM4TWdrTTdWMXljQnZsamVQSms3WXNpT2tLWGltcnh1aWRqegpJdmxKQ1k5WHZOM1E0YytQa0c2VXFxYkpxTUlZUzBmeTNPQnRLcUdQb01nQWJPRFZJMmkvczdXS0hJdndFZUdvCmd2MXoxOFRPYks0NmlqU1hlNTNCL2pDM2UyTERvTUpFTnR4eXM2cHhMSWxZSktKdURwbHpnRVVKYUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlHNUFJQkFBS0NBWUVBdytqdTZ0NkdQSFVVVVlnWmVOOGJxUy9nd2ZhWloyb1ZUbFg1M004VXU0TnhtMkpiCnVzYnc2bUJCY0R3Sk5HTGp5RW1zNG9oWXBWd3lFdXM1bGhlT01xNVNvME1YS0JPVXByR1o5cWtHeTlQR1ZLTnQKdmlGREgrY2pIMTcxa3NhRjh1YWQ3dHZ6TE5Jbkx1cnduZlh6MXYvVXh3cTQ4WEpVd1RQQTZnWVpYUVJacGowNApCSm1welpYeVg2OVc2aUUzeVRuUFJON2h1UitXcVFRZFVCL3BYRGdORU0xU2ZkcGFMTU9pY2VTQ1NnelBsVlNnClMxajB5aGx1aUI1TWxCNWxzREFHRXFHRGE1SlV0YkFUWUlsTzdQMVNDWTQvUWxMdHZLOThhUkk4dFVhZm5XQzYKQW9NQ1Z0S2oxdkR2TzZHbXF6cTFvYWpQbWsrOUJFQ0xZcEdhU2lRazhJNExIcWViQlY5Y1MwK3hzeHBqTWphcQo0VWpoakIzN3BWQys2ZTh2M2VOUDVrVjY2aW4wQml4TCtveTZEZm9PQzFwVmFzcGZ3M2EyZzBQQ1dmdTlTbzFUCkZSSlYvb1ZPNkN5WFV1OS9rWWplbkNhRlI1dGtNOUZNU3NHUFFMUnl2U1A5N0N2VDMzcitoVDN6VUZXMWdJcGwKT0hzTG5iUjNodUcvc2YrQkFnTUJBQUVDZ2dHQUJyLzF5MTNUWGkzaWYxU2pIQWtEMlBadlZmOTdGWmNRR056WgplUVFoZ0x4c281L2w3UytCaVhHN2ozUmlGTTM3YnlFcXRidGc0b0drc0FZdXU3OGdCUnNBZWVPTDNyT2VBWWhJCjk3aW5KVXFzb0tubzFBNHRVK0lRMGJuaDJDYkM0cldUWjNGb2xYakFKTnV2WXFIZ3Z0MmRwU1gzYlVvMUpWcjEKSUpzSk1LMC9zWHlXZTRJWDJaOTY5RlVFTjVqaFpTdDZ1cks3TURlb1p6WmZGQzJsU3FvYnVTSjUzeUF3enk0RwpZTW93dXdCcC9va2w1TEt4N0d5bjVFUzIrcnQ1VWV1M2tlcnJWalNydDJrbC9EenJsMC9QT1hMMDVhdC9tWVpvCkRsU3p4MSthQi9yZnp1NDF5OThFOGNiT0hGbE1JaFZQcWRCZG13QWVpWTBZaTB4eEpweERFNDVIaVB6dVNBQXAKSU9oanRETlJwRElwZlFLS2o2OGxLZWdCN1VKNDhJRTdpYnpGODBVMlpBZFZyU1FaZVlycllTb3h6bzhNMkZJWApDcVkxZ1l4NWdCbVUzK3VLN0dzeFB1bzhPdjkzLzhJbW5IQldXMW5OYVV3MzA1RzM0cFRsaCtiazl5Y2x1NWxhCkxnTVRFSzl0WXMyTG9Edm51U2k2Y3ovNjhWeGhBb0hCQU1obkdPcEt2d1JDeVJ3cC9IcTA1elVWdmFET25keFIKREVxU254OXRrWFJMeE1ud2poOVlaK3EyVnVUUGdaODRGMlRrTjJtOWZFUW4wU3hVdlJJdFdyaXlaRitkUTFBbQppeHNzYkVrZjQ5amJMLzBzRmtrTkF3eldqdDNKZC9YeUlVRENTY2JIQWMxKzNiakRaWGhoaTBaRloxbFdualN6CnlTM0JHOEhsaDN2MUlRWnVSS3U3QnY3eFZyQ2wwczRUd0hOdGI1OXNTLzFWWHVYdDA5eHRQM09peGlJSzBLdjAKMjJPVEJPbnBrQU4vZUg5a2NGRXluZmtvdUR4Y3VGY3RGUUtCd1FENlFyK2ZVNjFmMDcrK0tMeTRtcHA3NGsyLwpXS1dpdXplNG9ZOXQxbENMcHBKUVJqOHU1Z3JoZVdidWgrNkFJc0pkRTJkcWV5YURGV0ZXUXhmMmZLK3drMWk4ClVwek9yWlovazZHb3JPYUFWcEs1UWl0NkVxWTgzKzVjWHJVOGdNYWZtbzZFSXF6T1R0YXIvdEN2eFUxdWpHbDIKcDR1WENpOUNLTjJRQlkyb2crSkVPYlBFckhoL2M1VWRnbFJkY0NlQ2lrV202SjRBajlySEE4U2trdlRYTHlPUApDRXlKY1NVUnFoajRZYVRib2hQdnowb3ZxMHU4aDdYRkpHbGltNzBDZ2NCVUJVMmY1V2pDeTVGdituWjlwOTBNCkY2cGlnbDRUSWZQcVRDRGsxMVpWa1BMWHk4QjZpZUUvdWVVaWw1RjhCTk5pSElEVEYzdkRRNEppZU1Dd24wMWIKQklncXdrK1hpaUZtYWpDWVZBTitSeCtPb081VEFGNllBbGp4eWVjK3VaNlJmU1BiY0ZKa0t0MmcrbU5Qbm0zNwpMMXdPUzgrV3Z3NEkzZDdhWTNaelZTbmNmVnpUTjEzT2c3Ylo1eHhFQkduNnV4WkNtL0FjTGEvVTdPcVhqMEk4CkpERzMwaHI5RFhMeUE1RGExVzdvMklmWHVXK1J5NHdLQzdWNnNWRWtVNlVDZ2NFQXE2aUhPZWt5bmUxbnN5N00KTEMvWDBTdnNPbGk2M0lGZ2VpTlBkMzZ1cHV1dHBxUllpSG5BY3VKTUNVZHgvN0JYODNIdzJLZjZSYVd2cTNUQQpCaEdHalM2MGloQjhnSU92SEhrT1JOMjhDY0hZU0h5cng4THRCZ3B2dkNvMlZIYmNSdlBEMTd6VkhYb1VZOHVZCkowakZrUk44NzZlQzV5cFVPaVEvdlo4aGlMcFZ4SWh6MTI2YUJJb3FlU0JCY0FvUy84YUtlaTlLMllYVEFmbUMKczRRZHIxQWxLdUg5WmJVWFFTT1VseUthNnhBa2JyU1g1VlN3MFhPZzZjWE5CNWRkQW9IQkFKSUR0a05EMjBaTQoraGdaL1hrY2plTWlzNGtWeHppK01haEk0c3JWeXY0Skw0YW13TXN2SWhwa0l0eHF2bWVpd0JWQVp6VUZ0ZXZVCmh3N2VtakJvMmlhRU54cEZxcXBieWFWNWF2QmI4WjhudVpLSUhaN2hiaEthd0x0NnRaTHFTVk9BMThaNlVrcnYKY2luNmNIeUo3NFdrSk5jVmpQamprQXh1SGpjcGV6T25KWWc3dzFIWkFZaVVrL1I0SlpMNHV4cFJncW5qclprNQpqelFua0h6R0YxbDdGTXg3RC9PMDl4MFB3c2pCdjE1UjVFMVd5MnVuTUJLTHMwUEZWUnV5N1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    name: karmada-apiserver
contexts:
  - context:
      cluster: karmada-apiserver
      user: karmada-apiserver
    name: karmada-apiserver
current-context: karmada-apiserver



COMPUTE

apiVersion: v1
kind: Config
clusters:
- name: "compute-cluster"
  cluster:
    server: "https://10.10.10.61:6443"
    insecure-skip-tls-verify: true

users:
- name: "compute-cluster"
  user:
    token: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjNVbjhqdnZib3FGSmcxSkVoODFNWTNzRG9KVy1PQXdIUkgtaGZBQXR2QWMifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrYXJtYWRhLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrYXJtYWRhLWFjY2Vzcy10b2tlbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrYXJtYWRhLWFjY2VzcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImEwNWExOGU1LWYwMWQtNDQzOC05NDc1LTRiYWM1NTRjNjk2NSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprYXJtYWRhLXN5c3RlbTprYXJtYWRhLWFjY2VzcyJ9.OPr5DHM9G132BQ6gg0n_dqGjkb2pcsC3Wk-lJs3nTZ7Eqhf7gZbIIm8YpLT7okr9tIjO5iW4B_mGA1HYA4FB94NHkvikzf6Q9ZA_Rjl2pCItkz9d0slYs5DOJM49yVWVOyz9BtdB0cAQPvyUaKIoG47Bsxt3eJA25TiaAqWOPfsOsubFgZB1FMp7o1FD2tF9V7mNjfz9_USYmhp_cGmlD8zMh2wqX3Ddyy_2Eg_YqH8_L7DLr3W85b7M6mL8CeW_5qB_ktby8g-r7i_OetXRedSmylJXbaEgzxbNmZftJOHbRLETvAg0cnFsMkS0iJgP_K28NIR16ojmpx-oLKEExQ"

contexts:
- name: "compute-cluster"
  context:
    user: "compute-cluster"
    cluster: "compute-cluster"

current-context: "compute-cluster"


STORAGE

apiVersion: v1
kind: Config
clusters:
- name: "storage-cluster"
  cluster:
    server: "https://10.10.10.41:6443"
    insecure-skip-tls-verify: true

users:
- name: "storage-cluster"
  user:
    token: "eyJhbGciOiJSUzI1NiIsImtpZCI6ImVNRnNwR1RZaE45UTNZNzNZem8zSzFCQ05IbFZ4SmJLVHFyYVBOYWNmQ1kifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrYXJtYWRhLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrYXJtYWRhLWFjY2Vzcy10b2tlbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrYXJtYWRhLWFjY2VzcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjRlNGY3YzIzLTJhNWQtNDc5Ny05YWU4LTY5OGI4YTBjMzFhZiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprYXJtYWRhLXN5c3RlbTprYXJtYWRhLWFjY2VzcyJ9.Ll-nN2p8YWuoLq2iwjOlE7uyab-6Cpp16UUsS1_gIrYoAiR9OIs4Yfvu3wiivLgnE_yinqoPMRHkZtjsJMgcJWsyVtl5-eCIKwRIz_kI-yjiLW9c2wxwFD2iENCuGR2vRoswnc0AGyp4mAIcQufOyAyb9UOlf7JcHEv_iU6m4tOVW8CYTMZ9cbs2fePabllqCfSioav10FZx24ZJltvCyZUpn0Q7Z8dUAlmpsmguQdJFZyx6n2TazuUP_egUXZOBg6Ys_lpcU9OpIp-8RdyUyM3-JRMJXZdJkiwC8e3j7-gmf4SP9lRP92nsNqCvPz3u5MyqCCypx-g85HmcSTY9ig"

contexts:
- name: "storage-cluster"
  context:
    user: "storage-cluster"
    cluster: "storage-cluster"

current-context: "storage-cluster"

while true; do curl -s https://raw.githubusercontent.com/karmada-io/karmada/master/hack/install-cli.sh | sudo bash -s kubectl-karmada && break || echo "Retrying in 5s..." && sleep 5; done

kubectl karmada join compute-cluster --kubeconfig=.kube/karmada-config --cluster-kubeconfig=.kube/compute-config
kubectl karmada join storage-cluster --kubeconfig=.kube/karmada-config --cluster-kubeconfig=.kube/storage-config

kubectl --kubeconfig=.kube/karmada-config get clusters
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-csi-default
---
apiVersion: policy.karmada.io/v1alpha1
kind: PropagationPolicy
metadata:
  name: pvc-propagation
  namespace: default
spec:
  resourceSelectors:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      name: shared-pvc
  placement:
    clusterAffinity:
      clusterNames:
        - compute-cluster
        - storage-cluster


export PIPELINE_VERSION=karmada
kubectl apply -k "github.com/innocentrda/pipelines/manifests/kustomize/cluster-scoped-resources?ref=$PIPELINE_VERSION"
kubectl wait --for condition=established --timeout=60s crd/applications.app.k8s.io
kubectl apply -k "github.com/innocentrda/pipelines/manifests/kustomize/env/dev?ref=$PIPELINE_VERSION"