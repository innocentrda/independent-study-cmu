
---

# karmada-sa.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: karmada-access
  namespace: karmada-system


kubectl create clusterrolebinding karmada-access-binding --clusterrole=cluster-admin --serviceaccount=karmada-system:karmada-access


---

# karmada-access-token.yaml
apiVersion: v1
kind: Secret
metadata:
  name: karmada-access-token
  namespace: karmada-system
  annotations:
    kubernetes.io/service-account.name: karmada-access
type: kubernetes.io/service-account-token





SECRET_NAME=karmada-access-token

# Get the token
TOKEN=$(kubectl -n karmada-system get secret $SECRET_NAME -o jsonpath='{.data.token}' | base64 -d)

# Show the token
echo $TOKEN





COMPUTE

apiVersion: v1
kind: Config
clusters:
- name: "compute-cluster"
  cluster:
    server: "https://10.10.10.61:6443"
    insecure-skip-tls-verify: true
users:
- name: "compute-cluster"
  user:
    token: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjhZbDNzT29LWnlQV0d0aW9iMUVHZ1VRaTcxa05NTXJzT1d6M0szTVlYT1kifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrYXJtYWRhLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrYXJtYWRhLWFjY2Vzcy10b2tlbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrYXJtYWRhLWFjY2VzcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjM1NDZlZmU2LTUzMWEtNDc1ZC1iYzkzLWZmMGVkM2M1MGMxNyIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprYXJtYWRhLXN5c3RlbTprYXJtYWRhLWFjY2VzcyJ9.cMd0K1XwpIjEwTOAeAlAvlW9uhGbkOCmoRWd9byF2ev6PhoNuoJiPeP6UuS1z8muQgPIsqB4tguDxaFAQcBYaohYUutGsKpfGo-5BVlULn4EXKcXU0AklAYC5b69ICPkrOeWmVaxL__9UuMi25ZEIQJYJi_zrgtCEI9whbzKoZehSswt7bMfLiEKaTT5Qj_2afrxvJtkDCtjDj3TSI4zh8TbJy_NbZY-7cVo1R6moxOaZLICCUdYAYbSXAOQcV-ynpun3rzviqomSinm-306hx8m73RBKIvn4Nvn7VyG2dnDXsdEBFGvh6xCJ5474T4eafketD4NHzEaT8DeProjNg"
contexts:
- name: "compute-cluster"
  context:
    user: "compute-cluster"
    cluster: "compute-cluster"
current-context: "compute-cluster"


STORAGE

apiVersion: v1
kind: Config
clusters:
- name: "storage-cluster"
  cluster:
    server: "https://10.10.10.41:6443"
    insecure-skip-tls-verify: true
users:
- name: "storage-cluster"
  user:
    token: "eyJhbGciOiJSUzI1NiIsImtpZCI6IjFRaTI1U1BiaTBEaWM1eGVub3paMWVacW9IelJmZDR4NVZhdHEtWHE3dkEifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrYXJtYWRhLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrYXJtYWRhLWFjY2Vzcy10b2tlbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrYXJtYWRhLWFjY2VzcyIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjU3ZTQxZWQzLTRmZDUtNDQ5MC1iZGVhLTljZjMzM2I4YjVmMiIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprYXJtYWRhLXN5c3RlbTprYXJtYWRhLWFjY2VzcyJ9.gAa_HwQmKI84FHZ7nb50-yd2Xa6OO9u_F2CqpvOhinvRb6PcSzCxMhkv2t-iK_p3r3xGJiYPWP1JSdLU9STIKyq7aXOVZnv8g6Dodu4tWrxpack5IDHMcPz_QBlKJau1Vx1pzQziqoZWMQ8ZbC6g0Bc-h63r_IcCVx-yrsuu8JekLudHBCVJ65ORctI4IuIASK1MFn-Ept81PF1zSzcfPoEFWrW9193beQoTEThkjfjcnYd4y1mg1pG3cVUDMsWv8lFz7QKRZYRCoyOMX9Z4R4dcjlZMIAsUA_lPJrsxzG-3Hcs8t_PJemghpPapV-FnLPhpKwEIWhuXxG_OZimGHQ"
contexts:
- name: "storage-cluster"
  context:
    user: "storage-cluster"
    cluster: "storage-cluster"
current-context: "storage-cluster"


#########################################

# nginx-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: default
spec:
  replicas: 1  # This will be overridden per cluster
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80

---
apiVersion: policy.karmada.io/v1alpha1
kind: PropagationPolicy
metadata:
  name: nginx-propagation
  namespace: default
spec:
  resourceSelectors:
    - apiVersion: apps/v1
      kind: Deployment
      name: nginx
  placement:
    clusterAffinity:
      clusterNames:
        - compute-cluster
        - storage-cluster
    replicaScheduling:
      replicaSchedulingType: Divided
      replicaDivisionPreference: Weighted
      weightPreference:
        staticWeightList:
          - targetCluster:
              clusterNames:
                - compute-cluster
            weight: 3
          - targetCluster:
              clusterNames:
                - storage-cluster
            weight: 4




- sh
- -c
- xtables-set-mode.sh --mode legacy && kube-proxy --cluster-cidr=10.42.0.0/16 --conntrack-max-per-core=0 --conntrack-tcp-timeout-close-wait=0s --conntrack-tcp-timeout-established=0s --healthz-bind-address=127.0.0.1 --hostname-override=compute-ceph3 --kubeconfig=/var/lib/rancher/rke2/agent/kubeproxy.kubeconfig --proxy-mode=iptables

# sudo nano /var/lib/rancher/rke2/agent/pod-manifests/kube-proxy.yaml
# sudo systemctl restart rke2-agent


# https://github.com/amirianfar/kubeflow-tutorial/blob/main/access_kfp_from_jupyter_notebook.yaml


apiVersion: kubeflow.org/v1alpha1
kind: PodDefault
metadata:
  name: access-ml-pipeline
  namespace: kubeflow-user-example-com
spec:
  desc: Allow access to Kubeflow Pipelines
  selector:
    matchLabels:
      access-ml-pipeline: "true"
  volumes:
    - name: volume-kf-pipeline-token
      projected:
        sources:
          - serviceAccountToken:
              path: token
              expirationSeconds: 7200
              audience: pipelines.kubeflow.org      
  volumeMounts:
    - mountPath: /var/run/secrets/kubeflow/pipelines
      name: volume-kf-pipeline-token
      readOnly: true
  env:
    - name: KF_PIPELINES_SA_TOKEN_PATH
      value: /var/run/secrets/kubeflow/pipelines/token




https://docs.vultr.com/use-karmada-to-orchestrate-vultr-kubernetes-engine-in-multiple-locations
https://github.com/karmada-io/karmada/tree/master/charts/karmada


helm repo add karmada-charts https://raw.githubusercontent.com/karmada-io/karmada/master/charts
helm --namespace karmada-system upgrade -i karmada karmada-charts/karmada --create-namespace
kubectl get secret karmada-kubeconfig -n karmada-system -o jsonpath={.data.kubeconfig} | base64 -d > .kube/karmada-config
 # ==> Update the server in the file with the cluster manager node's IP address


# karmada-config.yaml
apiVersion: v1
kind: Config
clusters:
  - cluster:
      server: https://10.10.10.30:5443
      insecure-skip-tls-verify: true
    name: karmada-apiserver
users:
  - user:
      client-certificate-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZOekNDQTUrZ0F3SUJBZ0lVTVlZaXZCME9WYUhTcnBmeFZldTQrZXFacXZFd0RRWUpLb1pJaHZjTkFRRU0KQlFBd1hERUxNQWtHQTFVRUJoTUNlSGd4Q2pBSUJnTlZCQWdNQVhneENqQUlCZ05WQkFjTUFYZ3hDakFJQmdOVgpCQW9NQVhneENqQUlCZ05WQkFzTUFYZ3hDekFKQmdOVkJBTU1BbU5oTVJBd0RnWUpLb1pJaHZjTkFRa0JGZ0Y0Ck1CNFhEVEkxTURReE9URTNNelF3TUZvWERUTXdNRFF4T0RFM016UXdNRm93TURFWE1CVUdBMVVFQ2hNT2MzbHoKZEdWdE9tMWhjM1JsY25NeEZUQVRCZ05WQkFNVERITjVjM1JsYlRwaFpHMXBiakNDQWFJd0RRWUpLb1pJaHZjTgpBUUVCQlFBRGdnR1BBRENDQVlvQ2dnR0JBTVBvN3VyZWhqeDFGRkdJR1hqZkc2a3Y0TUgybVdkcUZVNVYrZHpQCkZMdURjWnRpVzdyRzhPcGdRWEE4Q1RSaTQ4aEpyT0tJV0tWY01oTHJPWllYampLdVVxTkRGeWdUbEtheG1mYXAKQnN2VHhsU2piYjRoUXgvbkl4OWU5WkxHaGZMbW5lN2I4eXpTSnk3cThKMzE4OWIvMU1jS3VQRnlWTUV6d09vRwpHVjBFV2FZOU9BU1pxYzJWOGwrdlZ1b2hOOGs1ejBUZTRia2ZscWtFSFZBZjZWdzREUkROVW4zYVdpekRvbkhrCmdrb016NVZVb0V0WTlNb1pib2dlVEpRZVpiQXdCaEtoZzJ1U1ZMV3dFMkNKVHV6OVVnbU9QMEpTN2J5dmZHa1MKUExWR241MWd1Z0tEQWxiU285Ync3enVocHFzNnRhR296NXBQdlFSQWkyS1Jta29rSlBDT0N4Nm5td1ZmWEV0UApzYk1hWXpJMnF1Rkk0WXdkKzZWUXZ1bnZMOTNqVCtaRmV1b3A5QVlzUy9xTXVnMzZEZ3RhVldyS1g4TjJ0b05ECndsbjd2VXFOVXhVU1ZmNkZUdWdzbDFMdmY1R0kzcHdtaFVlYlpEUFJURXJCajBDMGNyMGovZXdyMDk5Ni9vVTkKODFCVnRZQ0taVGg3QzUyMGQ0Ymh2N0gvZ1FJREFRQUJvNElCR3pDQ0FSY3dEZ1lEVlIwUEFRSC9CQVFEQWdXZwpNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01DQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHCkExVWREZ1FXQkJRVXJnS1VDemgvbmx1ZzVJVWcvTDlLWW0vQlJ6QWZCZ05WSFNNRUdEQVdnQlJwMHh5WWZKTi8KQmdydDhJcjZYZnlmaXF6N0hqQ0Jsd1lEVlIwUkJJR1BNSUdNZ2hacmRXSmxjbTVsZEdWekxtUmxabUYxYkhRdQpjM1pqZ2ljcUxtVjBZMlF1YTJGeWJXRmtZUzF6ZVhOMFpXMHVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXeUNJaW91CmEyRnliV0ZrWVMxemVYTjBaVzB1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDRkNvdWEyRnliV0ZrWVMxemVYTjAKWlcwdWMzWmpnZ2xzYjJOaGJHaHZjM1NIQkg4QUFBRXdEUVlKS29aSWh2Y05BUUVNQlFBRGdnR0JBSjFnQVR5eQppOFcwYkxjWlhsRTRmTTFacFVnUTFUeDdIRndZY2V3SW1mRlJoNjBvOEtxQWVtekNWU0NodVRqNmdING9NajVlCnI1Um1nWXJyY3dDQTJQQitLU0pYVkQ2U1ZVOXNLR3BwdHNsWDZybXZMdlpBenlaRWYyaUhTRVNucFd0Sm01WFcKMm1mQVNIMFRvOEYzditMSkVzT0Q5enlObVU1MnkwbVFyZE1CN0lkcGl2anBvbndML3h5cVlyN2U3YVpVM0tWNgpWR2lsbTkxTHVIVndoK3FWanQwZTVZRkJMaEpvN1hqTEx4T3YzV1RlN3VzTlhVNldFU05HbXBUMlI5bmZ4MC9yCkhCVjdYdVpQakVvRHpCRXF2djhpWWNSaFVjTTgwWUR1VFhobFJxWkFrTjkydHl0YWd3SmpLUUxsN0lVenpsVEMKZVR3dmxJSHVOYmpNRXFmY2kwVmxHSjc5K3JadTM4TWdrTTdWMXljQnZsamVQSms3WXNpT2tLWGltcnh1aWRqegpJdmxKQ1k5WHZOM1E0YytQa0c2VXFxYkpxTUlZUzBmeTNPQnRLcUdQb01nQWJPRFZJMmkvczdXS0hJdndFZUdvCmd2MXoxOFRPYks0NmlqU1hlNTNCL2pDM2UyTERvTUpFTnR4eXM2cHhMSWxZSktKdURwbHpnRVVKYUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      client-key-data: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlHNUFJQkFBS0NBWUVBdytqdTZ0NkdQSFVVVVlnWmVOOGJxUy9nd2ZhWloyb1ZUbFg1M004VXU0TnhtMkpiCnVzYnc2bUJCY0R3Sk5HTGp5RW1zNG9oWXBWd3lFdXM1bGhlT01xNVNvME1YS0JPVXByR1o5cWtHeTlQR1ZLTnQKdmlGREgrY2pIMTcxa3NhRjh1YWQ3dHZ6TE5Jbkx1cnduZlh6MXYvVXh3cTQ4WEpVd1RQQTZnWVpYUVJacGowNApCSm1welpYeVg2OVc2aUUzeVRuUFJON2h1UitXcVFRZFVCL3BYRGdORU0xU2ZkcGFMTU9pY2VTQ1NnelBsVlNnClMxajB5aGx1aUI1TWxCNWxzREFHRXFHRGE1SlV0YkFUWUlsTzdQMVNDWTQvUWxMdHZLOThhUkk4dFVhZm5XQzYKQW9NQ1Z0S2oxdkR2TzZHbXF6cTFvYWpQbWsrOUJFQ0xZcEdhU2lRazhJNExIcWViQlY5Y1MwK3hzeHBqTWphcQo0VWpoakIzN3BWQys2ZTh2M2VOUDVrVjY2aW4wQml4TCtveTZEZm9PQzFwVmFzcGZ3M2EyZzBQQ1dmdTlTbzFUCkZSSlYvb1ZPNkN5WFV1OS9rWWplbkNhRlI1dGtNOUZNU3NHUFFMUnl2U1A5N0N2VDMzcitoVDN6VUZXMWdJcGwKT0hzTG5iUjNodUcvc2YrQkFnTUJBQUVDZ2dHQUJyLzF5MTNUWGkzaWYxU2pIQWtEMlBadlZmOTdGWmNRR056WgplUVFoZ0x4c281L2w3UytCaVhHN2ozUmlGTTM3YnlFcXRidGc0b0drc0FZdXU3OGdCUnNBZWVPTDNyT2VBWWhJCjk3aW5KVXFzb0tubzFBNHRVK0lRMGJuaDJDYkM0cldUWjNGb2xYakFKTnV2WXFIZ3Z0MmRwU1gzYlVvMUpWcjEKSUpzSk1LMC9zWHlXZTRJWDJaOTY5RlVFTjVqaFpTdDZ1cks3TURlb1p6WmZGQzJsU3FvYnVTSjUzeUF3enk0RwpZTW93dXdCcC9va2w1TEt4N0d5bjVFUzIrcnQ1VWV1M2tlcnJWalNydDJrbC9EenJsMC9QT1hMMDVhdC9tWVpvCkRsU3p4MSthQi9yZnp1NDF5OThFOGNiT0hGbE1JaFZQcWRCZG13QWVpWTBZaTB4eEpweERFNDVIaVB6dVNBQXAKSU9oanRETlJwRElwZlFLS2o2OGxLZWdCN1VKNDhJRTdpYnpGODBVMlpBZFZyU1FaZVlycllTb3h6bzhNMkZJWApDcVkxZ1l4NWdCbVUzK3VLN0dzeFB1bzhPdjkzLzhJbW5IQldXMW5OYVV3MzA1RzM0cFRsaCtiazl5Y2x1NWxhCkxnTVRFSzl0WXMyTG9Edm51U2k2Y3ovNjhWeGhBb0hCQU1obkdPcEt2d1JDeVJ3cC9IcTA1elVWdmFET25keFIKREVxU254OXRrWFJMeE1ud2poOVlaK3EyVnVUUGdaODRGMlRrTjJtOWZFUW4wU3hVdlJJdFdyaXlaRitkUTFBbQppeHNzYkVrZjQ5amJMLzBzRmtrTkF3eldqdDNKZC9YeUlVRENTY2JIQWMxKzNiakRaWGhoaTBaRloxbFdualN6CnlTM0JHOEhsaDN2MUlRWnVSS3U3QnY3eFZyQ2wwczRUd0hOdGI1OXNTLzFWWHVYdDA5eHRQM09peGlJSzBLdjAKMjJPVEJPbnBrQU4vZUg5a2NGRXluZmtvdUR4Y3VGY3RGUUtCd1FENlFyK2ZVNjFmMDcrK0tMeTRtcHA3NGsyLwpXS1dpdXplNG9ZOXQxbENMcHBKUVJqOHU1Z3JoZVdidWgrNkFJc0pkRTJkcWV5YURGV0ZXUXhmMmZLK3drMWk4ClVwek9yWlovazZHb3JPYUFWcEs1UWl0NkVxWTgzKzVjWHJVOGdNYWZtbzZFSXF6T1R0YXIvdEN2eFUxdWpHbDIKcDR1WENpOUNLTjJRQlkyb2crSkVPYlBFckhoL2M1VWRnbFJkY0NlQ2lrV202SjRBajlySEE4U2trdlRYTHlPUApDRXlKY1NVUnFoajRZYVRib2hQdnowb3ZxMHU4aDdYRkpHbGltNzBDZ2NCVUJVMmY1V2pDeTVGdituWjlwOTBNCkY2cGlnbDRUSWZQcVRDRGsxMVpWa1BMWHk4QjZpZUUvdWVVaWw1RjhCTk5pSElEVEYzdkRRNEppZU1Dd24wMWIKQklncXdrK1hpaUZtYWpDWVZBTitSeCtPb081VEFGNllBbGp4eWVjK3VaNlJmU1BiY0ZKa0t0MmcrbU5Qbm0zNwpMMXdPUzgrV3Z3NEkzZDdhWTNaelZTbmNmVnpUTjEzT2c3Ylo1eHhFQkduNnV4WkNtL0FjTGEvVTdPcVhqMEk4CkpERzMwaHI5RFhMeUE1RGExVzdvMklmWHVXK1J5NHdLQzdWNnNWRWtVNlVDZ2NFQXE2aUhPZWt5bmUxbnN5N00KTEMvWDBTdnNPbGk2M0lGZ2VpTlBkMzZ1cHV1dHBxUllpSG5BY3VKTUNVZHgvN0JYODNIdzJLZjZSYVd2cTNUQQpCaEdHalM2MGloQjhnSU92SEhrT1JOMjhDY0hZU0h5cng4THRCZ3B2dkNvMlZIYmNSdlBEMTd6VkhYb1VZOHVZCkowakZrUk44NzZlQzV5cFVPaVEvdlo4aGlMcFZ4SWh6MTI2YUJJb3FlU0JCY0FvUy84YUtlaTlLMllYVEFmbUMKczRRZHIxQWxLdUg5WmJVWFFTT1VseUthNnhBa2JyU1g1VlN3MFhPZzZjWE5CNWRkQW9IQkFKSUR0a05EMjBaTQoraGdaL1hrY2plTWlzNGtWeHppK01haEk0c3JWeXY0Skw0YW13TXN2SWhwa0l0eHF2bWVpd0JWQVp6VUZ0ZXZVCmh3N2VtakJvMmlhRU54cEZxcXBieWFWNWF2QmI4WjhudVpLSUhaN2hiaEthd0x0NnRaTHFTVk9BMThaNlVrcnYKY2luNmNIeUo3NFdrSk5jVmpQamprQXh1SGpjcGV6T25KWWc3dzFIWkFZaVVrL1I0SlpMNHV4cFJncW5qclprNQpqelFua0h6R0YxbDdGTXg3RC9PMDl4MFB3c2pCdjE1UjVFMVd5MnVuTUJLTHMwUEZWUnV5N1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
    name: karmada-apiserver
contexts:
  - context:
      cluster: karmada-apiserver
      user: karmada-apiserver
    name: karmada-apiserver
current-context: karmada-apiserver



while true; do curl -s https://raw.githubusercontent.com/karmada-io/karmada/master/hack/install-cli.sh | sudo bash -s kubectl-karmada && break || echo "Retrying in 5s..." && sleep 5; done

kubectl karmada join compute-cluster --kubeconfig=.kube/karmada-config --cluster-kubeconfig=.kube/compute-config
kubectl karmada join storage-cluster --kubeconfig=.kube/karmada-config --cluster-kubeconfig=.kube/storage-config

kubectl --kubeconfig=.kube/karmada-config get clusters
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc
  namespace: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: nfs-csi-default
---
apiVersion: policy.karmada.io/v1alpha1
kind: PropagationPolicy
metadata:
  name: pvc-propagation
  namespace: default
spec:
  resourceSelectors:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      name: shared-pvc
  placement:
    clusterAffinity:
      clusterNames:
        - compute-cluster
        - storage-cluster


export PIPELINE_VERSION=karmada
kubectl apply -k "github.com/innocentrda/pipelines/manifests/kustomize/cluster-scoped-resources?ref=$PIPELINE_VERSION"
kubectl wait --for condition=established --timeout=60s crd/applications.app.k8s.io
kubectl apply -k "github.com/innocentrda/pipelines/manifests/kustomize/env/dev?ref=$PIPELINE_VERSION"